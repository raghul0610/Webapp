{"ast":null,"code":"var _jsxFileName = \"/workspace/src/components/LanguageSelector.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLanguage } from '../contexts/LanguageContext';\nimport './LanguageSelector.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageSelector = () => {\n  _s();\n  const {\n    language,\n    setLanguage,\n    t\n  } = useLanguage();\n  const languages = [{\n    code: 'en',\n    name: t('english'),\n    flag: 'ðŸ‡ºðŸ‡¸'\n  }, {\n    code: 'hi',\n    name: t('hindi'),\n    flag: 'ðŸ‡®ðŸ‡³'\n  }, {\n    code: 'ta',\n    name: t('tamil'),\n    flag: 'ðŸ‡®ðŸ‡³'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-selector\",\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      value: language,\n      onChange: e => setLanguage(e.target.value),\n      className: \"language-select\",\n      \"aria-label\": t('selectLanguage'),\n      children: languages.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: lang.code,\n        children: [lang.flag, \" \", lang.name]\n      }, lang.code, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguageSelector, \"z0NntALXVIUNQffs7k/d/KRa4Vk=\", false, function () {\n  return [useLanguage];\n});\n_c = LanguageSelector;\nexport default LanguageSelector;\nvar _c;\n$RefreshReg$(_c, \"LanguageSelector\");","map":{"version":3,"names":["React","useLanguage","jsxDEV","_jsxDEV","LanguageSelector","_s","language","setLanguage","t","languages","code","name","flag","className","children","value","onChange","e","target","map","lang","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspace/src/components/LanguageSelector.jsx"],"sourcesContent":["import React from 'react';\nimport { useLanguage } from '../contexts/LanguageContext';\nimport './LanguageSelector.css';\n\nconst LanguageSelector = () => {\n  const { language, setLanguage, t } = useLanguage();\n\n  const languages = [\n    { code: 'en', name: t('english'), flag: 'ðŸ‡ºðŸ‡¸' },\n    { code: 'hi', name: t('hindi'), flag: 'ðŸ‡®ðŸ‡³' },\n    { code: 'ta', name: t('tamil'), flag: 'ðŸ‡®ðŸ‡³' }\n  ];\n\n  return (\n    <div className=\"language-selector\">\n      <select\n        value={language}\n        onChange={(e) => setLanguage(e.target.value)}\n        className=\"language-select\"\n        aria-label={t('selectLanguage')}\n      >\n        {languages.map((lang) => (\n          <option key={lang.code} value={lang.code}>\n            {lang.flag} {lang.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default LanguageSelector;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,6BAA6B;AACzD,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM;IAAEC,QAAQ;IAAEC,WAAW;IAAEC;EAAE,CAAC,GAAGP,WAAW,CAAC,CAAC;EAElD,MAAMQ,SAAS,GAAG,CAChB;IAAEC,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAEH,CAAC,CAAC,SAAS,CAAC;IAAEI,IAAI,EAAE;EAAO,CAAC,EAChD;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAEH,CAAC,CAAC,OAAO,CAAC;IAAEI,IAAI,EAAE;EAAO,CAAC,EAC9C;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAEH,CAAC,CAAC,OAAO,CAAC;IAAEI,IAAI,EAAE;EAAO,CAAC,CAC/C;EAED,oBACET,OAAA;IAAKU,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAChCX,OAAA;MACEY,KAAK,EAAET,QAAS;MAChBU,QAAQ,EAAGC,CAAC,IAAKV,WAAW,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CF,SAAS,EAAC,iBAAiB;MAC3B,cAAYL,CAAC,CAAC,gBAAgB,CAAE;MAAAM,QAAA,EAE/BL,SAAS,CAACU,GAAG,CAAEC,IAAI,iBAClBjB,OAAA;QAAwBY,KAAK,EAAEK,IAAI,CAACV,IAAK;QAAAI,QAAA,GACtCM,IAAI,CAACR,IAAI,EAAC,GAAC,EAACQ,IAAI,CAACT,IAAI;MAAA,GADXS,IAAI,CAACV,IAAI;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACnB,EAAA,CAzBID,gBAAgB;EAAA,QACiBH,WAAW;AAAA;AAAAwB,EAAA,GAD5CrB,gBAAgB;AA2BtB,eAAeA,gBAAgB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}