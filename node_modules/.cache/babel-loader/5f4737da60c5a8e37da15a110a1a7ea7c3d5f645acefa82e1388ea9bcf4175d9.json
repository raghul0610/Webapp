{"ast":null,"code":"var _jsxFileName = \"/workspace/src/contexts/LanguageContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { getTranslation } from '../utils/translations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/createContext();\nexport const useLanguage = () => {\n  _s();\n  const context = useContext(LanguageContext);\n  if (!context) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n};\n_s(useLanguage, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const LanguageProvider = ({\n  children\n}) => {\n  _s2();\n  const [language, setLanguage] = useState(() => {\n    return localStorage.getItem('selectedLanguage') || 'en';\n  });\n  useEffect(() => {\n    localStorage.setItem('selectedLanguage', language);\n  }, [language]);\n  const t = key => getTranslation(key, language);\n  const value = {\n    language,\n    setLanguage,\n    t\n  };\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s2(LanguageProvider, \"mueLFsb7W+ob0vplnFH1D1qcvP8=\");\n_c = LanguageProvider;\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","getTranslation","jsxDEV","_jsxDEV","LanguageContext","useLanguage","_s","context","Error","LanguageProvider","children","_s2","language","setLanguage","localStorage","getItem","setItem","t","key","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspace/src/contexts/LanguageContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { getTranslation } from '../utils/translations';\n\nconst LanguageContext = createContext();\n\nexport const useLanguage = () => {\n  const context = useContext(LanguageContext);\n  if (!context) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n};\n\nexport const LanguageProvider = ({ children }) => {\n  const [language, setLanguage] = useState(() => {\n    return localStorage.getItem('selectedLanguage') || 'en';\n  });\n\n  useEffect(() => {\n    localStorage.setItem('selectedLanguage', language);\n  }, [language]);\n\n  const t = (key) => getTranslation(key, language);\n\n  const value = {\n    language,\n    setLanguage,\n    t\n  };\n\n  return (\n    <LanguageContext.Provider value={value}>\n      {children}\n    </LanguageContext.Provider>\n  );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,cAAc,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,eAAe,gBAAGP,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMQ,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,OAAO,GAAGT,UAAU,CAACM,eAAe,CAAC;EAC3C,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,WAAW;AAQxB,OAAO,MAAMI,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,MAAM;IAC7C,OAAOe,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,IAAI,IAAI;EACzD,CAAC,CAAC;EAEFf,SAAS,CAAC,MAAM;IACdc,YAAY,CAACE,OAAO,CAAC,kBAAkB,EAAEJ,QAAQ,CAAC;EACpD,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMK,CAAC,GAAIC,GAAG,IAAKjB,cAAc,CAACiB,GAAG,EAAEN,QAAQ,CAAC;EAEhD,MAAMO,KAAK,GAAG;IACZP,QAAQ;IACRC,WAAW;IACXI;EACF,CAAC;EAED,oBACEd,OAAA,CAACC,eAAe,CAACgB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAT,QAAA,EACpCA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACb,GAAA,CAtBWF,gBAAgB;AAAAgB,EAAA,GAAhBhB,gBAAgB;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}